---
import config from "@/config/config";
const products = [
{
id: 1,
name: "PALAU COLA",
image: "/images/products/palau-cola-2-min.png",
description: "Bebida analcohólica artificial gasificada sabor cola",
color: "red" // Clase de color del fondo
},
{
id: 2,
name: "TALCA SODA",
image: "/images/products/soda-2-min.png",
description: "Bebida analcohólica artificial gasificada sabor naranja",
color: "orange"
},
{
id: 3,
name: "AGUA MINERAL",
image: "/images/products/agua-2-min.png",
description: "Agua mineral natural purificada",
color: "blue"
},
{
id: 4,
name: "TALCA MANZANA",
image: "/images/products/talca-manzana-min.png",
description: "Bebida analcohólica artificial gasificada sabor manzana",
color: "green"
},
{
id: 5,
name: "PAPAYA PALAU",
image: "/images/products/palau-papaya-2-min.png",
description: "Bebida analcohólica artificial gasificada sabor papaya",
color: "yellow"
}
];
---

<section id="productos" class="py-20 overflow-hidden bg-white relative">
  <!-- Burbujas de fondo -->
  <div class="absolute inset-0 pointer-events-none">
    <div class="bubbles-bg">
      <div class="bubble bubble-1"></div>
      <div class="bubble bubble-2"></div>
      <div class="bubble bubble-3"></div>
      <div class="bubble bubble-4"></div>
      <div class="bubble bubble-5"></div>
      <div class="bubble bubble-6"></div>
      <div class="bubble bubble-7"></div>
      <div class="bubble bubble-8"></div>
    </div>
  </div>

  <div class="container mx-auto px-4">
    <h2 class="text-4xl md:text-5xl font-bold text-center mb-12 relative">
      <span class="text-red relative inline-block">
        Nuestros Productos
        <div class="absolute bottom-0 left-0 w-full h-1 bg-red opacity-70 mt-2"></div>
      </span>
    </h2>

    <div class="carousel-container">
      <div class="carousel-wrapper">
        <div id="products-carousel" class="carousel-track">
          {products.map((product, index) => (
          <div class="carousel-item" data-index={index}>
            <div class="product-card max-w-md mx-auto rounded-lg shadow-lg overflow-hidden">
              <!-- Contenedor del contenido -->
              <div class="product-content-container p-2">
                <div class="flex relative">
                  <!-- Imagen del producto (animada desde la izquierda) -->
                  <div class="product-image-container absolute left-0 top-0 bottom-0 z-30 pointer-events-none">
                    <div class="product-image-wrapper">
                      <img src={product.image} alt={product.name} class="product-image" loading="lazy" />
                    </div>
                  </div>

                  <!-- Contenido del producto (animado desde abajo) -->
                  <div class="product-text-content ml-auto z-10 flex flex-col h-full">
                    <div class="mb-auto">
                      <h3 class={`text-4xl font-bold text-${product.color}`}>{product.name}</h3>
                      <p class="text-gray-700 text-lg mt-4">{product.description}</p>
                    </div>
                    <div class="mt-auto flex justify-start items-center pb-6">
                      <!-- Información del tamaño del producto -->
                      <div class="flex items-center mt-4 space-x-8">
                        <!-- Contenedor de 3L -->
                        <div class="flex flex-col items-center">
                          <div
                            class="h-16 w-16 border-2 border-gray-500 rounded-full flex flex-col items-center justify-center bg-white shadow-md">
                            <img src="/images/bidon.png" alt="3L" class="w-8 h-8 mb-1">
                          </div>
                          <p class="text-gray-700 text-sm mt-2 font-medium">3 Litros</p>
                        </div>

                        <!-- Contenedor de 500cc -->
                        <div class="flex flex-col items-center">
                          <div
                            class="h-12 w-12 border-2 border-gray-500 rounded-full flex flex-col items-center justify-center bg-white shadow-md">
                            <img src="/images/botellita.png" alt="500cc" class="w-6 h-6 mb-1">
                          </div>
                          <p class="text-gray-700 text-sm mt-2 font-medium">500cc</p>
                        </div>
                      </div>

                      <!-- Burbuja decorativa -->
                      {/* <div class="bubbles-container relative h-16 w-full mt-4">
                        <div class="bubble bubble-sm"></div>
                        <div class="bubble bubble-md"></div>
                        <div class="bubble bubble-lg"></div>
                      </div> */}
                    </div>
                    <div class="flex justify-start items-center gap-2 pb-4">
                      <img class="w-1/6" src="/images/exceso_en_azucares.png" alt="etiqueta de exceso en azucares">
                      <img class="w-1/6" src="/images/exceso_en_calorias.png" alt="etiqueta de exceso en calorias">
                      <img class="w-1/4" src="/images/contiene_edulcorantes.png" alt="etiqueta de contiene edulcorantes">
                    </div>

                  </div>
                </div>
              </div>
            </div>
          </div>
          ))}
        </div>
      </div>

      <div class="carousel-controls">
        <button id="prev-btn" class="control-btn" aria-label="Producto anterior">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
        </button>
        <div class="carousel-indicators">
          {products.map((product, index) => (
          <button class="indicator-dot" data-index={index} aria-label={`Ver ${product.name}`}>
          </button>
          ))}
        </div>
        <button id="next-btn" class="control-btn" aria-label="Siguiente producto">
          <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </button>
      </div>
    </div>
  </div>
</section>

<style>
  /* Estilos del contenedor del carrusel */
  .carousel-container {
    position: relative;
    max-width: 800px;
    margin: 0 auto;
    overflow: visible;
  }

  .carousel-wrapper {
    position: relative;
    overflow: visible;
    padding: 2rem 0;
  }

  /* Estilos de la pista del carrusel */
  .carousel-track {
    display: flex;
    transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Estilos de los elementos del carrusel */
  .carousel-item {
    min-width: 100%;
    padding: 0 1rem;
    opacity: 0;
    transition: opacity 0.4s ease-in-out;
  }

  .carousel-item.active {
    opacity: 1;
  }

  /* Estilos de la tarjeta de producto */
  .product-card {
    position: relative;
    display: flex;
    flex-direction: column;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    min-height: 300px;
    background-color: #FFF9F3;
    overflow: visible;
  }

  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
  }

  /* Estilos del contenido del producto */
  .product-content-container {
    position: relative;
    z-index: 2;
    width: 100%;
  }

  .product-text-content {
    max-width: 65%;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.4s ease, transform 0.4s ease;
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-height: 300px;
  }

  .carousel-item.active .product-text-content {
    opacity: 1;
    transform: translateY(0);
  }

  /* Colores para los títulos */
  .text-red {
    color: rgba(225, 37, 27, 1);
  }

  .text-orange {
    color: rgba(243, 101, 0, 1);
  }

  .text-yellow {
    color: rgba(255, 212, 62, 1);
  }

  .text-green {
    color: rgba(128, 205, 0, 1);
  }

  .text-blue {
    color: rgba(4, 57, 172, 1);
  }

  /* Contenedor de la imagen */
  .product-image-container {
    position: absolute;
    left: -40%;
    top: -30%;
    bottom: -30%;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 30;
    pointer-events: none;
  }

  /* Estilos de la imagen */
  .product-image-wrapper {
    height: 200%;
    width: 100%;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transform: translateX(-30px);
    transition: opacity 0.5s ease, transform 0.5s ease;
    z-index: 50;
  }

  .carousel-item.active .product-image-wrapper {
    opacity: 1;
    transform: translateX(0);
  }

  .product-image {
    height: 200%;
    max-height: 700px;
    height: 130%;
    max-height: 500px;
    object-fit: contain;
    filter: drop-shadow(0 10px 15px rgba(0, 0, 0, 0.2));
    transition: transform 0.5s ease;
    transform: rotate(-5deg);
  }

  .product-card:hover .product-image {
    transform: translateY(-10px) rotate(-3deg);
  }

  /* Estilos de los controles del carrusel */
  .carousel-controls {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 2rem;
  }

  .control-btn {
    background-color: #E1251B;
    color: white;
    width: 3rem;
    height: 3rem;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
    margin: 0 1rem;
  }

  .control-btn:hover {
    background-color: #0439AC;
    transform: scale(1.1);
  }

  .control-btn:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(225, 37, 27, 0.3);
  }

  /* Estilos de los indicadores */
  .carousel-indicators {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
  }

  .indicator-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    background-color: #ccc;
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .indicator-dot.active {
    background-color: #E1251B;
    transform: scale(1.2);
  }

  /* Burbujas animadas */
  .bubbles-container {
    position: relative;
    overflow: hidden;
    pointer-events: none;
  }

  .bubble {
    position: absolute;
    background: rgba(255, 255, 255, 0.7);
    border: 1px solid rgba(0, 0, 0, 0.1);
    border-radius: 50%;
    bottom: 0;
    animation: bubble-rise var(--duration, 4s) infinite ease-in;
    opacity: 0;
  }

  .bubble-sm {
    width: 10px;
    height: 10px;
    left: 30%;
    --duration: 3s;
    animation-delay: 0.2s;
  }

  .bubble-md {
    width: 15px;
    height: 15px;
    left: 50%;
    --duration: 4s;
    animation-delay: 0.7s;
  }

  .bubble-lg {
    width: 20px;
    height: 20px;
    left: 70%;
    --duration: 5s;
    animation-delay: 0.4s;
  }

  @keyframes bubble-rise {
    0% {
      transform: translateY(0) scale(0.8);
      opacity: 0;
    }

    20% {
      opacity: 0.6;
    }

    50% {
      transform: translateY(-30px) scale(1);
      opacity: 0.8;
    }

    100% {
      transform: translateY(-50px) scale(0.6);
      opacity: 0;
    }
  }

  /* Media queries para responsividad */
  @media (max-width: 640px) {
    .product-card {
      min-height: 480px;
    }

    .product-content-container {
      padding-top: 200px;
    }

    .product-text-content {
      max-width: 100%;
      text-align: center;
      padding-left: 0;
      min-height: 250px;
    }

    .product-image-container {
      left: 0;
      right: 0;
      top: -120px;
      bottom: auto;
      width: 100%;
      height: 300px;
    }

    .product-image-wrapper {
      height: 100%;
    }

    .product-image {
      height: 260px;
      transform: rotate(0);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const track = document.getElementById('products-carousel');
    const items = track?.querySelectorAll('.carousel-item');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    const dots = document.querySelectorAll('.indicator-dot');
    let currentIndex = 0;
    const totalItems = items?.length || 0;

    // Función para activar una slide específica
    const activateSlide = (index: number) => {
      // Primero, quitamos la clase active de todos los items
      items?.forEach(item => {
        item.classList.remove('active');
      });

      // Activamos inmediatamente el nuevo item
      if (items && items[index]) {
        items[index].classList.add('active');
      }

      // Actualizamos los indicadores
      dots.forEach((dot, i) => {
        dot.classList.toggle('active', i === index);
      });
    };

    // Precarga de imágenes para mejorar rendimiento
    const preloadImages = () => {
      if (!items) return;
      
      items.forEach(item => {
        const img = item.querySelector('img');
        if (img) {
          const src = img.getAttribute('src');
          if (src) {
            const preloadImg = new Image();
            preloadImg.src = src;
          }
        }
      });
    };
    
    // Precargar imágenes
    preloadImages();

    // Inicializa el carrusel
    if (items && items.length > 0) {
      // Actualizamos la posición del track sin animación inicialmente
      if (track) {
        track.style.transition = 'none';
        track.style.transform = `translateX(-${currentIndex * 100}%)`;
        // Forzamos un reflow para aplicar los cambios inmediatamente
        track.offsetHeight;
        // Restauramos la transición
        track.style.transition = 'transform 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
      }

      // Activamos la primera slide inmediatamente
      activateSlide(0);
    }

    // Event listeners para los botones
    prevBtn?.addEventListener('click', () => {
      // Desactivamos la slide actual
      if (items) {
        items[currentIndex]?.classList.remove('active');
      }

      // Cambiamos el índice
      currentIndex = (currentIndex - 1 + totalItems) % totalItems;

      // Actualizamos la posición del track
      if (track) {
        track.style.transform = `translateX(-${currentIndex * 100}%)`;
      }

      // Activamos la nueva slide inmediatamente
      activateSlide(currentIndex);
    });

    nextBtn?.addEventListener('click', () => {
      // Desactivamos la slide actual
      if (items) {
        items[currentIndex]?.classList.remove('active');
      }

      // Cambiamos el índice
      currentIndex = (currentIndex + 1) % totalItems;

      // Actualizamos la posición del track
      if (track) {
        track.style.transform = `translateX(-${currentIndex * 100}%)`;
      }

      // Activamos la nueva slide inmediatamente
      activateSlide(currentIndex);
    });

    // Event listeners para los indicadores
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        // Solo hacemos algo si estamos cambiando a una slide diferente
        if (index !== currentIndex) {
          // Desactivamos la slide actual
          if (items) {
            items[currentIndex]?.classList.remove('active');
          }

          // Cambiamos el índice
          currentIndex = index;

          // Actualizamos la posición del track
          if (track) {
            track.style.transform = `translateX(-${currentIndex * 100}%)`;
          }

          // Activamos la nueva slide inmediatamente
          activateSlide(currentIndex);
        }
      });
    });

    // Manejo táctil para dispositivos móviles
    let touchStartX = 0;
    let touchEndX = 0;

    track?.addEventListener('touchstart', (e) => {
      touchStartX = e.changedTouches[0].screenX;
    }, { passive: true });

    track?.addEventListener('touchend', (e) => {
      touchEndX = e.changedTouches[0].screenX;
      handleSwipe();
    }, { passive: true });

    function handleSwipe() {
      if (touchEndX < touchStartX - 50) {
        // Desliz a la izquierda, ir al siguiente
        nextBtn?.click();
      } else if (touchEndX > touchStartX + 50) {
        // Desliz a la derecha, ir al anterior
        prevBtn?.click();
      }
    }
  });
</script>